# app/gemini_module/constants.py

# Метка по умолчанию для документов, которые не подошли ни под одну категорию.
FALLBACK_CATEGORY = "Прочее"

# ======================================================================
# === ЕДИНЫЙ ИСТОЧНИК ПРАВДЫ ДЛЯ ВСЕХ КОНФИГУРАЦИЙ ===
# ======================================================================
# Чтобы добавить новую категорию, просто добавьте новый ключ и его
# значение в этот словарь. Список TENDER_CATEGORIES обновится автоматически.
TENDER_CONFIGS = {
    "Нулевой цикл": {
        "prompt_hint": (
            "Это тендер на нулувой цикл. Обрати внимание на земляные работы, "
            "устройство ограждающих конструкций котлована, свайные работы."
        ),
        "json_structure": """
        {
          "pit_volume_m3": [
            "Список земляных работ ТОЛЬКО для устройства котлована "
            "(не надо учитывать другие работы, например, для устройства "
            "форшахты и тому подобное) в кубометрах (только числа)"
          ],
          "slurry_wall_specs": {
            "is_slurry_wall": "Усть ли устройство стены в грунте в документе (true/false)" <bool>,
            "thickness_mm": "толщина стены в грунте. Либо указана явно, либо можно определить по косвенным признакам, например, по ширине траншеи форшазты" <число | null>,
            "concrete_volume_m3": ["количество бетона используемого для устройства основной стены в грунте без форшахты и обвязочной балки"] [<список чисел> | null],
            "concrete_grade": "марка и тип используемого бетона для устройства основной стены в грунте" <строка | null>,
            "rebar_type": "тип арматуры используемой для устройства основной стены в грунте" <строка | null>,
            "rebar_total_weight_t": ["общий вес арматуры используемой для устройства основной стены в грунте"] [<список чисел> | null]
          },
          "strut_system_weights_t": ["вес подпорных систем в тоннах"] [<список чисел float> | null],
          "main_pile_specs": "Опредлеяем наличие и данные для основного свайного поля, если оно есть." {
            "is_main_pile_field": "Есть ли основное свайное поле (true/false)" <bool>,
            "diameter_mm": "Диаметр свай в миллиметрах (например, 800 из "бурение скважин диаметром 800 мм")" <число или null>,
            "count": "Количество свай в штуках (шт) если удастся найти эти данные" <целое число или null>,
            "concrete_volume_m3": ["Объем бетона для свай в кубических метрах (м³). Учитывать только бетон, необходимый для заливки самого тела сваи"] [<список чисел> или null],
            "concrete_grade": "Марка или класс бетона в основных сваях (например, "В25", "B25 W8 F150")" <строка или null>,
            "rebar_total_weight_t": "Общий вес арматуры или армокаркасов в тоннах (т)" [<список чисел> или null],
            "rebar_type": "Класс используемой арматуры (например, "А500С")" <строка или null>,
            "grouting_volume_m3": "Объем цементации под пятой сваи в кубических метрах (м³) если есть" [<список чисел> или null]
          },
          "testing_pile_specs": "Определяем наличие и данные для испытуемых свай (устройство испытуемых свай является отдельной работой и служит для проверки их несущей способности и определения характеристик будущего основного свайного поля, в дальнейшем данные сваи становятся частью основного свайного поля), если они есть. На испытуемую сваю сверху устанавливается специальный домкрат, который позволяет измерять нагрузки и деформации. Для большей устойчивости домкрата используются дополнительные анкерные сваи" {
            "is_testing_pile_field": "Есть ли испытуемые сваи (true/false) согласно нашему описанию? Если нет, то заполненять поля данного раздела дальше не нужно" <bool>,
            "testing_piles": "Список характеристик испытуемых свай, если есть" {
              "diameter_mm": "Диаметр испытуемыхых свай в миллиметрах (например, 800 из "бурение скважин диаметром 800 мм")" <число или null>,
              "count_test_piles": "Количество испытуемых свай в штуках (шт) если удастся найти эти данные" <целое число или null>,
              "concrete_volume_m3": ["Объем бетона для испытуемых свай в кубических метрах (м³)"] [<список чисел> или null],
              "concrete_grade": "Марка или класс бетона в испытуемых сваях (например, "В25", "B25 W8 F150")" <строка или null>,
              "rebar_total_weight_t": "Общий вес арматуры или армокаркасов в тоннах (т)" [<список чисел> или null],
              "rebar_type": "Класс используемой арматуры (например, "А500С")" <строка или null>,
            },
            "anker_pile_specs": "Определяем наличие и данные для анкерных свай, если они есть." {
              "diameter_mm": "Диаметр анкерных свай в миллиметрах (например, 800 из "бурение скважин диаметром 800 мм")" <число или null>,
              "count_test_piles": "Количество анкерных свай в штуках (шт) если удастся найти эти данные" <целое число или null>,
              "concrete_volume_m3": ["Объем бетона для анкерных свай в кубических метрах (м³)"] [<список чисел> или null],
              "concrete_grade": "Марка или класс бетона в анкерных сваях (например, "В25", "B25 W8 F150")" <строка или null>,
              "rebar_total_weight_t": "Общий вес арматуры или армокаркасов в тоннах (т)" [<список чисел> или null],
              "rebar_type": "Класс используемой арматуры (например, "А500С")" <строка или null>,
            }
        }
        """,
    },
    "Проектирование и BIM": {
        "prompt_hint": (
            "Это тендер на проектные работы. Обрати особое внимание на стадии "
            "проектирования (П, РД), требования к программному обеспечению (BIM) и состав команды."
        ),
        "json_structure": """
        {
          "project_name": "Название проекта или объекта",
          "services_list": ["Список ключевых услуг по проектированию"],
          "bim_standard": "Требуемый стандарт или версия BIM (если указано)",
          "deadline_days": "Срок выполнения в календарных днях (только число)"
        }
        """,
    },
    "Строительный контроль": {
        "prompt_hint": (
            "Это тендер на услуги строительного контроля (технадзора). "
            "Ищи информацию о функциях контролера, объекте контроля и частоте предоставления отчетов."
        ),
        "json_structure": """
        {
          "controlled_object": "Наименование объекта контроля",
          "control_functions": ["Список функций строительного контроля"],
          "reporting_frequency": "Периодичность предоставления отчетов",
          "duration_months": "Продолжительность оказания услуг в месяцах (только число)"
        }
        """,
    },
    # Конфигурация для "Прочее" должна быть здесь, но она не попадет
    # в список для классификации.
    FALLBACK_CATEGORY: {
        "prompt_hint": (
            "Это документ общего типа. Постарайся определить его основную суть, "
            "заголовок и найти контактную информацию."
        ),
        "json_structure": """
        {
          "document_title": "Полный заголовок или название документа",
          "main_subject": "Основной предмет или тема документа в 1-2 предложениях",
          "contacts": "Контактные лица или реквизиты для связи"
        }
        """,
    },
}


# ======================================================================
# === АВТОМАТИЧЕСКИ ГЕНЕРИРУЕМЫЕ КОНСТАНТЫ ===
# ======================================================================

# Список категорий для классификации теперь генерируется из ключей словаря TENDER_CONFIGS.
# Мы исключаем из него нашу "запасную" категорию.
TENDER_CATEGORIES = [category for category in TENDER_CONFIGS.keys() if category != FALLBACK_CATEGORY]
