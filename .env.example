# Пример файла .env для парсера тендеров
# Скопируйте этот файл в .env и настройте под свои нужды

# URL API сервера для регистрации тендеров
GO_SERVER_API_ENDPOINT=http://localhost:8080/api/v1

# API ключ для аутентификации на сервере
GO_SERVER_API_KEY=your_api_key_here

# (опционально) База для формирования AI endpoint, если отличается от GO_SERVER_API_ENDPOINT
# Пример: http://localhost:8080/api
# GO_SERVER_BASE_URL=http://localhost:8080/api

# (опционально) Шаблон endpoint для отправки AI-результатов
# Плейсхолдеры: {tender_id}, {lot_id}
# Пример: http://localhost:8080/api/tenders/{tender_id}/lots/{lot_id}/ai-results
# Если не задан, будет использован путь по умолчанию относительно BASE_URL
# GO_SERVER_AI_RESULTS_ENDPOINT_TEMPLATE=

# Google API ключ для Gemini API
GOOGLE_API_KEY=your_google_api_key_here

# Уровни логгирования: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Резервный режим - если true, парсер будет продолжать работу даже при недоступности сервера
# При этом будут создаваться временные ID и файлы будут помещены в pending_sync/
PARSER_FALLBACK_MODE=false

# Дополнительные настройки (если нужны)
# PARSER_TIMEOUT=60
# PARSER_RETRY_COUNT=3
