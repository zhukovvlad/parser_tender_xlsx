# _test_tender.py
# ‚ö†Ô∏è  DEPRECATED: –≠—Ç–æ—Ç —Ñ–∞–π–ª —É—Å—Ç–∞—Ä–µ–ª –∏ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏
# üöÄ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ _test_tender_refactored.py –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
# üìù TODO: –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é

import json
import os
import warnings

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
warnings.warn("‚ö†Ô∏è  _test_tender.py —É—Å—Ç–∞—Ä–µ–ª! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ _test_tender_refactored.py", DeprecationWarning, stacklevel=2)

from dotenv import load_dotenv

from app.gemini_module import TenderProcessor

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
from app.gemini_module.constants import (
    FALLBACK_CATEGORY,
    TENDER_CATEGORIES,
    TENDER_CONFIGS,
)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
load_dotenv()
API_KEY = os.getenv("GOOGLE_API_KEY")
INPUT_FILE = "42_42_positions.md"


def main():
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —É—Å—Ç–∞—Ä–µ–≤—à—É—é –≤–µ—Ä—Å–∏—é!")
    print("üöÄ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ _test_tender_refactored.py –¥–ª—è –ª—É—á—à–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞...")

    if not API_KEY:
        print("‚ùå –û—à–∏–±–∫–∞: API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    if not os.path.exists(INPUT_FILE):
        print(f"‚ùå –û—à–∏–±–∫–∞: –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {INPUT_FILE}")
        return

    processor = None
    try:
        processor = TenderProcessor(api_key=API_KEY).upload(INPUT_FILE)

        # --- –≠–¢–ê–ü 1: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è ---
        print("‚è≥ –û–ø—Ä–µ–¥–µ–ª—è—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞...")
        tender_type = processor.classify(categories=TENDER_CATEGORIES, fallback_label=FALLBACK_CATEGORY)
        print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∫–∞–∫: '{tender_type}'")

        # --- –≠–¢–ê–ü 2: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ---
        print(f"‚è≥ –ò–∑–≤–ª–µ–∫–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ —à–∞–±–ª–æ–Ω—É –¥–ª—è '{tender_type}'...")
        extracted_data = processor.extract_json(category=tender_type, configs=TENDER_CONFIGS)

        extracted_data["determined_tender_type"] = tender_type

        # --- –í–´–í–û–î –†–ï–ó–£–õ–¨–¢–ê–¢–ê ---
        print("\nüéâ --- –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ --- üéâ")
        print(json.dumps(extracted_data, ensure_ascii=False, indent=2))

    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

    finally:
        if processor:
            processor.delete_uploaded_file()


if __name__ == "__main__":
    main()
