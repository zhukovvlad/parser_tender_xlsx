def read_headers(ws):
    """
    Извлекает заголовочную информацию (ID тендера, название тендера,
    объект и адрес) из предопределенных строк листа Excel.

    Функция сканирует строки с 3-й по 5-ю включительно. В каждой из этих строк
    она ищет ячейки с определенными текстовыми метками ("Предмет тендера:",
    "Объект", "Адрес") и извлекает соответствующие им значения из соседних ячеек
    той же строки.

    Предполагается, что:
    - Каждая часть заголовочной информации находится на отдельной строке в диапазоне 3-5.
    - Текстовая метка (например, "Предмет тендера:") находится в первой непустой ячейке строки.
    - Соответствующее значение находится во второй непустой ячейке той же строки.

    Args:
        ws (openpyxl.worksheet.worksheet.Worksheet): Лист Excel (объект openpyxl),
            из которого считываются данные.

    Returns:
        dict: Словарь, содержащий извлеченную заголовочную информацию.
              Ключи словаря: "tender_id", "tender_title", "object", "address".
              Если какая-либо часть информации не найдена, соответствующее
              значение в словаре будет `None`.
              Пример:
              {
                  "tender_id": "12345",
                  "tender_title": "Закупка оборудования",
                  "object": "Здание административное",
                  "address": "г. Москва, ул. Центральная, д. 1"
              }

    Примечания по реализации и потенциальные проблемы:
    - Если в строке, где найдена метка (например, "Предмет тендера:"), отсутствует
      вторая непустая ячейка со значением, попытка доступа к `values[1]`
      приведет к ошибке `IndexError`.
    - Разбор "tender_id" и "tender_title" из строки "Предмет тендера:" зависит
      от конкретного формата этой строки (ожидается, что ID идет первым,
      возможно с префиксом "№", и отделен пробелом от названия).
    - Список `values` формируется из значений ячеек, которые не являются `None`
      и не пусты после преобразования в строку и удаления пробелов.
    """
    # Инициализируем словарь для хранения результатов
    header = {"tender_id": None, "tender_title": None, "object": None, "address": None}

    # Итерируемся по строкам 3, 4 и 5
    for i in range(3, 6):
        # Собираем непустые значения из текущей строки
        # cell.value может быть не строкой, поэтому str(cell.value)
        # Фильтруем ячейки, которые являются None или пустыми строками
        row_values = [cell.value for cell in ws[i] if cell.value is not None and str(cell.value).strip()]

        # Если в строке нет непустых значений, переходим к следующей
        if not row_values:
            continue

        first_value_in_row = str(row_values[0]) # Первое непустое значение в строке

        # Проверяем, с чего начинается первое непустое значение
        if first_value_in_row.startswith("Предмет тендера:"):
            if len(row_values) > 1: # Убедимся, что есть второе значение
                tender_details = str(row_values[1])
                parts = tender_details.split(" ", 1) # Разделяем по первому пробелу
                
                id_part = parts[0].replace("№", "")
                header["tender_id"] = id_part
                
                if len(parts) > 1:
                    header["tender_title"] = parts[1]
                elif len(parts) == 1 and id_part != tender_details : # Если нет пробела, но ID не вся строка (маловероятно с .split(" ", 1))
                     header["tender_title"] = "" # или tender_details, если ID это и есть "название"
                else: # если только ID без пробела
                    header["tender_title"] = tender_details # или можно оставить None или id_part, в зависимости от логики
                                                     # Текущий код делал: header["tender_title"] = values[1].split(" ", 1)[1] if " " in values[1] else values[1]
                                                     # Что означало, что если пробела нет, то title = вся строка values[1]
                                                     # Если есть только ID, то title = ID. Это поведение сохранено.
                    if " " not in tender_details: # Если пробела нет, вся строка - это title (после извлечения ID)
                         header["tender_title"] = tender_details


        elif first_value_in_row.startswith("Объект"):
            if len(row_values) > 1:
                header["object"] = row_values[1]
        elif first_value_in_row.startswith("Адрес"):
            if len(row_values) > 1:
                header["address"] = row_values[1]
                
    return header