"""
Модуль для базовой очистки (санитизации) текстовых данных.

Предоставляет простую утилиту для удаления или замены нежелательных
символов из строк, таких как символы перевода строки и возврата каретки,
а также для удаления начальных и конечных пробелов.
"""

from typing import Any

def sanitize_text(text: Any) -> Any:
    """
    Выполняет базовую очистку (санитизацию) входных данных, если они являются строкой.

    Если входные данные `text` являются строкой, функция выполняет следующие действия:
    1.  Заменяет все символы перевода строки (`\\n`) на пробелы.
    2.  Удаляет все символы возврата каретки (`\\r`).
    3.  Удаляет начальные и конечные пробельные символы из результирующей строки.

    Если входные данные не являются строкой (например, число, None, список),
    функция возвращает их без изменений.

    Args:
        text (Any): Входные данные для санитизации. Ожидается, что это может
            быть строка или любой другой тип данных.

    Returns:
        Any: Очищенная строка, если на вход была подана строка.
            В противном случае — исходные данные без изменений.

    Примеры:
        sanitize_text("  Пример\\nтекста\\r\\n с пробелами  ") == "Пример текста с пробелами"
        sanitize_text("Без изменений") == "Без изменений"
        sanitize_text(None) == None
        sanitize_text(123) == 123
    """
    # Проверяем, являются ли входные данные строкой
    if isinstance(text, str):
        # Заменяем символы новой строки на пробел, удаляем возврат каретки,
        # затем удаляем пробелы по краям.
        sanitized_string = text.replace('\n', ' ').replace('\r', '').strip()
        return sanitized_string
    
    # Если это не строка, возвращаем исходные данные без изменений
    return text