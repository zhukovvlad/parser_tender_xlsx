"""
Модуль для извлечения дополнительной информации о подрядчиках из Excel.

Функция этого модуля находит специальный блок "Дополнительная информация"
на листе Excel и считывает оттуда пары "ключ-значение" для указанного
подрядчика. Ключи располагаются в фиксированной колонке, а значения —
в колонке, соответствующей подрядчику.
"""

from typing import Dict, Any
from openpyxl.worksheet.worksheet import Worksheet

# Локальные импорты (из той же директории helpers)
from .find_row_by_first_column import find_row_by_first_column
from constants import SEARCH_KEYWORD_ADDITIONAL_INFO
# Импорт parse_contractor_row был удален, так как он не используется в этой функции.

def get_additional_info(ws: Worksheet, contractor: Dict[str, Any]) -> Dict[str, Any]:
    """
    Извлекает структурированную дополнительную информацию о конкретном подрядчике
    из специального блока на листе Excel.

    Функция сначала ищет на листе строку, начинающуюся с текста, определенного
    в `constants.SEARCH_KEYWORD_ADDITIONAL_INFO` (например, "Дополнительная информация"),
    используя поиск в первой колонке. Если такая строка найдена, функция начинает
    считывать данные со следующей строки.

    Предполагается, что каждая последующая значащая строка в этом блоке
    содержит наименование поля информации (ключ) во второй колонке (колонка B),
    а соответствующее значение для данного подрядчика — в колонке, номер которой
    указан в словаре `contractor` по ключу "column_start".

    Сбор информации прекращается при обнаружении строки, все ячейки которой (до ws.max_column)
    пусты, или при выходе за пределы максимальной строки листа.
    Пустые строковые значения ("") для извлеченных данных заменяются на None.
    Ключи приводятся к строковому типу.

    Args:
        ws (Worksheet): Объект рабочего листа Excel (openpyxl.worksheet.worksheet.Worksheet),
            из которого извлекаются данные.
        contractor (Dict[str, Any]): Словарь, содержащий информацию о подрядчике.
            Обязательно должен содержать ключ "column_start" (int), указывающий
            номер начальной колонки данных для этого подрядчика в блоке
            дополнительной информации.

    Returns:
        Dict[str, Any]: Словарь с дополнительной информацией о подрядчике.
            Ключами словаря являются наименования полей (строки) из второй колонки
            блока "Дополнительная информация", а значениями — соответствующие
            данные из колонки подрядчика (могут быть различных типов или None).
            Если блок "Дополнительная информация" не найден или пуст,
            возвращается пустой словарь.

    Пример структуры извлекаемых данных:
        Если на листе Excel ниже строки "Дополнительная информация":
        - Ячейка B20: "Опыт работы (лет)"
        - Ячейка (20, contractor["column_start"]): 5
        - Ячейка B21: "Наличие сертификата ISO"
        - Ячейка (21, contractor["column_start"]): "Да"
        - Ячейка B22: "Пустое значение"
        - Ячейка (22, contractor["column_start"]): "" (пустая строка)


        То функция вернет:
        {
            "Опыт работы (лет)": 5,
            "Наличие сертификата ISO": "Да",
            "Пустое значение": None
        }
    """
    additional_info: Dict[str, Any] = {}
    
    # Поиск строки, с которой начинается блок "Дополнительная информация"
    header_row_num = find_row_by_first_column(ws, SEARCH_KEYWORD_ADDITIONAL_INFO)

    if not header_row_num:
        return additional_info # Блок не найден, возвращаем пустой словарь

    # Данные начинаются со строки, следующей за заголовком
    current_row_num = header_row_num + 1
    # Колонка, из которой извлекаются значения для данного подрядчика
    contractor_data_col = contractor["column_start"]

    while True:
        # Защита от выхода за пределы листа
        if current_row_num > ws.max_row:
            break

        # Проверка, является ли текущая строка полностью пустой.
        # ws[current_row_num] возвращает кортеж ячеек (Cell) для данной строки.
        # Это может быть неэффективно для очень широких листов с малым количеством данных.
        # Для оптимизации можно ограничить количество проверяемых ячеек в строке.
        is_row_empty = all(cell.value is None for cell in ws[current_row_num])
        if is_row_empty:
            break  # Прерываем цикл, если строка полностью пустая

        # Получаем ключ из второй колонки (B)
        key_cell_obj = ws.cell(row=current_row_num, column=2)
        key_data = key_cell_obj.value
        
        # Получаем значение из колонки подрядчика
        value_cell_obj = ws.cell(row=current_row_num, column=contractor_data_col)
        value_data = value_cell_obj.value

        # Обрабатываем ключ: приводим к строке и удаляем лишние пробелы, если ключ существует.
        # Если ключ пуст или None, он будет проигнорирован.
        processed_key = None
        if key_data is not None:
            processed_key = str(key_data).strip()
            if not processed_key: # Если после strip ключ стал пустой строкой
                processed_key = None
        
        # Обрабатываем значение: пустые строки "" считаем как None, иначе берем как есть.
        processed_value = str(value_data).strip() if str(value_data).strip() != "" else None

        if processed_key: # Добавляем, только если ключ существует и не пуст
            additional_info[processed_key] = processed_value

        current_row_num += 1

    return additional_info